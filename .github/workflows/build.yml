name: Build

on:
  push:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        step: [ test, vet, fmt ]
    steps:
      - name: Cleanup workspace
        run: |
          echo "Cleaning up previous run from ${{ github.workspace }}"
          set -e # fail on error
          shopt -s dotglob # include hidden files
          sudo rm -rf *

      - name: Checkout repository code
        uses: actions/checkout@v2

      - name: ${{ matrix.step }}
        run: docker run --rm --mount src=`pwd`,target=/go/service,type=bind golang:buster /bin/bash -c "cd /go/service && make ${{ matrix.step }}"

      - name: Remove docker image
        run: docker rmi golang:buster

  lint:
    name: lint
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29

  build:
    name: build
    needs: [ test, lint ]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Build
        run: go build -v .

  publish:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    environment:
      name: Publish
    needs:
      - build
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
        id: go

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Generate Docker metadata
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: am3ocorp/
          tags: |
            type=ref,event=branch,pattern=latest
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
          flavor: |
            latest=true
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2.6.1
        with:
          context: .
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
